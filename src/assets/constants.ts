type QUANT_TYPE = {
    [index: string]: number;
};

type ALTER_TYPE = {
    [index: number]: string;
};

type ING_TYPE = {
    [index: string]: ALTER_TYPE;
};

export const MAX: number = 9;

export const INGREDIENTS: ING_TYPE = {
    "melted butter": {
        1: "avocado",
        2: "mayonnaise",
        3: "olive oil",
        4: "vegan butter",
        5: "Ghee",
        6: "Lard",
        7: "Sesame seeds",
        8: "melted butter",
    },
    "cocoa powder": {
        1: "dark chocolate",
        2: "milk chocolate",
        3: "dates",
        4: "matcha powder",
        5: "coffee",
        6: "strawberry nesquick",
        7: "turmeric",
        8: "potting soil",
    },
    "white sugar": {
        1: "white sugar",
        2: "brown sugar",
        3: "cane sugar",
        4: "honey",
        5: "agave",
        6: "pixie sticks",
        7: "ketchup",
        8: "Artificial sweetner",
    },
    "eggs": {
        1: "banana",
        2: "soaked chia seeds",
        3: "your favourite yogurt",
        4: "blocks of tofu",
        5: "cups of aquafaba",
        6: "xantham gum",
        7: "buttermilk",
        8: "eggs",
    },
    "vanilla extract": {
        1: "rose extract",
        2: "almond extract",
        3: "maple syrup",
        4: "liquid smoke",
        5: "pumpkin spice",
        6: "hot sauce",
        7: "matcha tea",
        8: "vanilla extract",
    },
    "all purpose flour": {
        1: "chickpea flour",
        2: "sorghum",
        3: "coconut flour",
        4: "rice flour",
        5: "mashed potato",
        6: "almond flour",
        7: "tapioca flour",
        8: "all purpose flour",
    },
    "iodized salt": {
        1: "dried garlic",
        2: "dried ginger",
        3: "vinegar",
        4: "black pepper powder",
        5: "anchovy paste",
        6: "soy sauce",
        7: "Bouillon powder",
        8: "iodized salt",
    },
    "21 min": {
        1: "30 min",
        2: "45 min",
        3: "7 years 2 days 3.75 hours 34 sec",
        4: "9 months",
        5: "82 min",
        6: "21 min",
        7: "2 min 47 sec",
        8: "100 min",
    },
};

// If you get more key values
const QUANT_KEYS: QUANT_TYPE = {
    "0x0": 0, //"0000",
    "0x1": 1, //"0001",
    "0x2": 10, //"0010",
    "0x3": 11, //"0011",
    "0x5": 101, //"0101",
    "0x7": 111, //"0111",
};

// change this
const DATA: string[] = [
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x7",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x5",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x0",
    "0x5",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x2",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x0",
    "0x7",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x2",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x0",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x1",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x7",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x7",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x7",
    "0x7",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x7",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x2",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x0",
    "0x1",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x2",
    "0x0",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x0",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x1",
    "0x0",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x2",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x7",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x1",
    "0x1",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x1",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x1",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x0",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x0",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x1",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x0",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x1",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x0",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x7",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x1",
    "0x3",
    "0x1",
    "0x3",
    "0x2",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x0",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x0",
    "0x3",
    "0x2",
    "0x3",
    "0x1",
    "0x1",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x2",
    "0x1",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x7",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x7",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x7",
    "0x2",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x7",
    "0x3",
    "0x3",
    "0x3",
    "0x1",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
    "0x3",
];

export const NUMBERS: number[] = DATA.map((d: string) => QUANT_KEYS[d]);

export const getRandomInt = (
    min: number = 1,
    max: number,
    runs: number
): number => {
    let value = 1;
    for (let i = 0; i < runs; i++) {
        value = Math.floor(Math.random() * (max - min) + min);
    }
    return value;
};
